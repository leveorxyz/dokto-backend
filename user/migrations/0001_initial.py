# Generated by Django 3.2.7 on 2021-11-26 15:03

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                (
                    "full_name",
                    models.CharField(
                        blank=True, max_length=180, verbose_name="full name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        max_length=254, unique=True, verbose_name="email"
                    ),
                ),
                (
                    "user_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("ADMIN", "admin"),
                            ("DOCTOR", "doctor"),
                            ("PATIENT", "patient"),
                            ("PHARMACY", "pharmacy"),
                            ("CLINIC", "clinic"),
                        ],
                        default="PATIENT",
                        max_length=20,
                        verbose_name="user type",
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.Group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.Permission",
                        verbose_name="user permissions",
                    ),
                ),
                (
                    "city",
                    models.CharField(
                        blank=True, max_length=50, null=True, verbose_name="city"
                    ),
                ),
                (
                    "is_verified",
                    models.BooleanField(
                        blank=True, default=False, null=True, verbose_name="is verified"
                    ),
                ),
                (
                    "state",
                    models.CharField(
                        blank=True, max_length=50, null=True, verbose_name="state"
                    ),
                ),
                (
                    "street",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="street"
                    ),
                ),
                (
                    "zip_code",
                    models.CharField(
                        blank=True, max_length=15, null=True, verbose_name="zip code"
                    ),
                ),
                (
                    "contact_no",
                    models.CharField(
                        blank=True, max_length=20, null=True, verbose_name="contact no"
                    ),
                ),
                (
                    "_profile_photo",
                    models.ImageField(blank=True, null=True, upload_to="profile_photo"),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="UserIp",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                ("ip_address", models.GenericIPAddressField()),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="DoctorInfo",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                ("date_of_birth", models.DateField(blank=True, null=True)),
                ("country", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="doctor_info",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "gender",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("MALE", "male"),
                            ("FEMALE", "female"),
                            ("OTHER", "other"),
                            ("PREFER NOT TO SAY", "preder not to say"),
                        ],
                        max_length=30,
                        null=True,
                    ),
                ),
                (
                    "_identification_photo",
                    models.ImageField(
                        blank=True, null=True, upload_to="doctor_identification_photo"
                    ),
                ),
                (
                    "identification_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("PASSPORT", "passport"),
                            ("DRIVER'S LICENSE", "driver's license"),
                            ("STATE ID", "state id"),
                        ],
                        max_length=20,
                        null=True,
                    ),
                ),
                ("facebook_url", models.URLField(blank=True, null=True)),
                ("linkedin_url", models.URLField(blank=True, null=True)),
                (
                    "professional_bio",
                    models.TextField(blank=True, max_length=512, null=True),
                ),
                ("twitter_url", models.URLField(blank=True, null=True)),
                (
                    "username",
                    models.CharField(
                        default=None,
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters and digits only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "identification_number",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("awards", models.TextField(blank=True, max_length=512, null=True)),
                (
                    "_license_file",
                    models.FileField(
                        blank=True, null=True, upload_to="doctor_license_file"
                    ),
                ),
                (
                    "notification_email",
                    models.EmailField(blank=True, max_length=254, null=True),
                ),
                (
                    "reason_to_delete",
                    models.CharField(blank=True, max_length=2000, null=True),
                ),
                ("temporary_disable", models.BooleanField(blank=True, default=False)),
                (
                    "accepted_insurance",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="DoctorAvailableHours",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                (
                    "day_of_week",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("SUN", "sunday"),
                            ("MON", "monday"),
                            ("TUE", "tuesday"),
                            ("WED", "wednesday"),
                            ("THU", "thursday"),
                            ("FRI", "friday"),
                            ("SAT", "saturday"),
                        ],
                        max_length=3,
                        null=True,
                    ),
                ),
                ("start_time", models.TimeField(blank=True, null=True)),
                ("end_time", models.TimeField(blank=True, null=True)),
                (
                    "doctor_info",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="user.doctorinfo",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="DoctorExperience",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                ("establishment_name", models.CharField(max_length=50)),
                ("job_title", models.CharField(max_length=50)),
                ("start_date", models.DateField()),
                ("end_date", models.DateField(blank=True, null=True)),
                (
                    "job_description",
                    models.TextField(blank=True, max_length=200, null=True),
                ),
                (
                    "doctor_info",
                    models.ForeignKey(
                        default=None,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="user.doctorinfo",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="DoctorLanguage",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                ("language", models.CharField(max_length=20)),
                (
                    "doctor_info",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="user.doctorinfo",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="DoctorReview",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                (
                    "patient_name",
                    models.CharField(blank=True, max_length=80, null=True),
                ),
                ("star_count", models.FloatField(blank=True, null=True)),
                ("comment", models.TextField(blank=True, max_length=5000, null=True)),
                (
                    "doctor_info",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="user.doctorinfo",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="DoctorSpecialty",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                ("specialty", models.CharField(max_length=50)),
                (
                    "doctor_info",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="user.doctorinfo",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ClinicInfo",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                (
                    "clinic_type",
                    models.CharField(
                        choices=[("HOSPITAL", "hospital"), ("CLINIC", "clinic")],
                        max_length=20,
                    ),
                ),
                (
                    "number_of_practitioners",
                    models.IntegerField(blank=True, default=0, null=True),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="clinic_info",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        default=None,
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters and digits only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="PharmacyInfo",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                (
                    "number_of_practitioners",
                    models.IntegerField(blank=True, default=0, null=True),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="pharmacy_info",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        default=None,
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters and digits only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="DoctorEducation",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                ("course", models.CharField(max_length=50)),
                ("year", models.CharField(max_length=15)),
                ("college", models.CharField(max_length=60)),
                (
                    "doctor_info",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="user.doctorinfo",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="PatientInfo",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                (
                    "gender",
                    models.CharField(
                        choices=[
                            ("MALE", "male"),
                            ("FEMALE", "female"),
                            ("OTHER", "other"),
                            ("PREFER NOT TO SAY", "preder not to say"),
                        ],
                        max_length=20,
                    ),
                ),
                ("date_of_birth", models.DateField()),
                (
                    "identification_type",
                    models.CharField(
                        choices=[
                            ("PASSPORT", "passport"),
                            ("DRIVER'S LICENSE", "driver's license"),
                            ("STATE ID", "state id"),
                            ("STUDENT ID", "student id"),
                        ],
                        max_length=20,
                    ),
                ),
                ("identification_number", models.CharField(max_length=50)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "insurance_name",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "insurance_number",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "insurance_policy_holder_name",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "insurance_type",
                    models.CharField(
                        choices=[("SELF-PAY", "self-pay"), ("INSURANCE", "insurance")],
                        max_length=20,
                    ),
                ),
                (
                    "referring_doctor_address",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "referring_doctor_full_name",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "referring_doctor_phone_number",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                (
                    "_identification_photo",
                    models.ImageField(
                        blank=True, null=True, upload_to="patient_identification_photo"
                    ),
                ),
                (
                    "name_of_parent",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
    ]
